# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['main.py'],
    pathex=['.'],
    binaries=[
        # Include the VLC DLLs here
        ('C:\\Program Files\\VideoLAN\\VLC\\libvlc.dll', '.'),
        ('C:\\Program Files\\VideoLAN\\VLC\\libvlccore.dll', '.'),
        # Include system DLLs if necessary
        ('C:\\Windows\\System32\\msvcr100.dll', '.'),
        ('C:\\Windows\\System32\\msvcp100.dll', '.'),
        ('C:\\Windows\\System32\\vcruntime140.dll', '.'),
        ('C:\\Windows\\System32\\ucrtbase.dll', '.'),
        ('C:\\Users\\Bamigos\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\openvr\\libopenvr_api_64.dll', 'openvr')
    ],
    datas=[
        ('requirements.txt', '.'),
        ('C:\\Users\\Bamigos\\Desktop\\metacade try\\video.mp4','.'),
        ('*', '.'),
        ('C:\\Program Files\\VideoLAN\\VLC\\plugins','.'),
    ],
    hiddenimports=[
        '_frozen_importlib_external',
        'pep517',
        'openvr',
        'video1.mp4',
        'openvr.openvr_api',
        'openvr.openvr_capi',
        'win32ctypes',
        'win32ctypes.pywin32',
        'win32ctypes.core',
        'win32ctypes.core.ctypes',
        'pywintypes',
        'win32api'
        'pep517',
        'openvr',
        'posix',
        'resource',
        'grp',
        'pwd',
        'org',
        '_scproxy',
        'termios',
        'org.python',
        'java.lang',
        'multiprocessing.BufferTooShort',
        'multiprocessing.AuthenticationError',
        '_posixshmem',
        '_posixsubprocess',
        'multiprocessing.get_context',
        'multiprocessing.TimeoutError',
        'multiprocessing.set_start_method',
        'multiprocessing.get_start_method',
        'pyimod02_importers',
        'typing_extensions',
        '_manylinux',
        'readline',
        '__builtin__',
        'ordereddict',
        'pkg_resources.extern.pyparsing',
        'win32com.shell',
        'com.sun',
        'com',
        'win32api',
        'win32com',
        '_winreg',
        'pkg_resources.extern.packaging',
        'pkg_resources.extern.appdirs',
        'vms_lib',
        'java',
        'automation',
        'license',
        'olefile',
        '_dummy_thread',
        'fcntl',
        'dummy_threading',
        'numpy.core.arrayprint',
        'numpy.core.result_type',
        'numpy.core.float_',
        'numpy.core.number',
        'numpy.core.object_',
        'numpy.core.max',
        'numpy.core.all',
        'numpy.core.errstate',
        'numpy.core.bool_',
        'numpy.core.inf',
        'numpy.core.isnan',
        'numpy.core.array2string',
        'numpy.lib.imag',
        'numpy.lib.real',
        'numpy.lib.iscomplexobj',
        'numpy.core.signbit',
        'numpy.core.isscalar',
        'win32pdh',
        'numpy.core.array',
        'numpy.core.isnat',
        'numpy.core.ndarray',
        'numpy.core.array_repr',
        'numpy.core.arange',
        'numpy.core.empty',
        'numpy.core.float32',
        'numpy.core.intp',
        'asyncio.DefaultEventLoopPolicy',
        'numpy.core.linspace',
        'numpy.core.iinfo',
        'numpy.core.transpose',
        'numpy.core.asarray',
        'numpy.core.integer',
        'numpy.core.sqrt',
        'numpy.core.conjugate',
        'numpy.core.swapaxes',
        'numpy.core.zeros',
        'numpy._typing._ufunc',
        'numpy.core.reciprocal',
        'numpy.core.sort',
        'numpy.core.argsort',
        'numpy.core.sign',
        'numpy.core.count_nonzero',
        'numpy.core.divide',
        'numpy.core.matmul',
        'numpy.core.asanyarray',
        'numpy.core.atleast_2d',
        'numpy.core.prod',
        'numpy.core.amax',
        'numpy.core.amin',
        'numpy.core.moveaxis',
        'numpy.core.geterrobj',
        'numpy.core.finfo',
        'numpy.core.isfinite',
        'numpy.core.sum',
        'numpy.core.multiply',
        'numpy.core.add',
        'numpy.core.dot',
        'numpy.core.Inf',
        'numpy.core.newaxis',
        'numpy.core.complexfloating',
        'numpy.core.inexact',
        'numpy.core.cdouble',
        'numpy.core.csingle',
        'numpy.core.double',
        'numpy.core.single',
        'numpy.core.intc',
        'numpy.core.empty_like',
        'threadpoolctl',
        'numpy.core.ufunc',
        'numpy.core.ones',
        'numpy.core.hstack',
        'numpy.core.atleast_1d',
        'numpy.core.atleast_3d',
        'numpy.core.vstack',
        'pickle5',
        'yaml',
        'numpy.eye',
        'numpy.recarray',
        'numpy.expand_dims',
        'numpy.array',
        'numpy.iscomplexobj',
        'numpy.amin',
        'numpy.amax',
        'numpy.isinf',
        'numpy.isnan',
        'numpy.isfinite',
        'numpy.float64',
        'numpy.float32',
        'numpy.uint64',
        'numpy.uint32',
        'numpy.uint16',
        'numpy.uint8',
        'numpy.int64',
        'numpy.int32',
        'numpy.int16',
        'numpy.int8',
        'numpy.bytes_',
        'numpy.str_',
        'numpy.void',
        'numpy.object_',
        'numpy.datetime64',
        'numpy.timedelta64',
        'numpy.number',
        'numpy.complexfloating',
        'numpy.floating',
        'numpy.integer',
        'numpy.unsignedinteger',
        'numpy.bool_',
        'numpy.generic',
        'numpy.dtype',
        'numpy.ndarray',
        'numpy.ufunc',
        'numpy.histogramdd',
        'numpy._distributor_init_local',
        'cffi',
        'defusedxml',
        'PyObjCTools',
        'Foundation',
        'database',
        'game_menu',
        'operator_menu',
        'keypress_handler',
        'video_controls',
        'vlc',

        
    ],
    hookspath=['.'],
    runtime_hooks=['hook-vlc.py'],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)
pyz = PYZ(a.pure, a.zipped_data,
    cipher=block_cipher,
)
exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='myscript',
    debug=True,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=True,
)
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='myscript',

)